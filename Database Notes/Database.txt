Transaction -> A series of action to perform a specific task

R(old bal 1st acct)
w(newbie 1st acct)
R(old bal 2nd acct)
w(new bal 2nd acct)
To transfer monry from one to another

Transactsions must have the following characteristics

A) Atomic-> it appears to the user to be a simple task which either all completed or not done at all

B) Consistency -> the transaction must leave the DB in a "consistent" (correct given our intentions) state.

C) Isolation -> to the user, each transation is seperate entity not affected by other users transactions

D) Durable -> if the system crases, the transactions must still be on the system.

E) Transaction Sechedule -> is the list of actions for a transaction. It can show many transactions concurrently progress. Allows DBMS to be aware and to manage concurrency issue.

Let A = an Object

R(A) -> read A
w(A) -> write A
S(A) -> request a shared lock on object A
X(A) -> request an exclusive lock on A

The end of each "Abort" or "commit"

Lock-> when we make Object A Not available
	Lock Granularity-> how big of a lock must we do?
		1)The field
		2)The Record
		3)The block or page ] Most common
		4)Whole file or DB
		
Locking Scheme
	Share Lock-> other transactions can read our info
	Exclusive lock-> No one else can access
	
Lock Duration-> some sort of timing for a lock

DeadLock-> When a transaction has a Lock on A, another needs it to continue their work. Perhaps they have a lock on B, and 1st one is waiting on it.

Timestamp-> could be an time d date, but could just be a number.

Locking Protocol-> a set of rules for locking objects to prevent anomolies.

Types of anomolies
A) Write Read (WR) Conflict-> where 1 transaction reads data modified by another transaction which has not commited -> Dirty Read

B) Read Write(RW) conflict-> one transaction has read an object; another transaction concurrently writes the object. WHen the First transactions reads the object again, the data is different.

WW Conflict -> When 2 transactions read the record and each write it back. Both are based on original data; DB will be incorrect.
